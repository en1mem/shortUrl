/*
 * This file is generated by jOOQ.
*/
package generated.tables.daos;


import generated.tables.Url;
import generated.tables.records.UrlRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UrlDao extends DAOImpl<UrlRecord, generated.tables.pojos.Url, Long> {

    /**
     * Create a new UrlDao without any configuration
     */
    public UrlDao() {
        super(Url.URL, generated.tables.pojos.Url.class);
    }

    /**
     * Create a new UrlDao with an attached configuration
     */
    @Autowired
    public UrlDao(Configuration configuration) {
        super(Url.URL, generated.tables.pojos.Url.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(generated.tables.pojos.Url object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<generated.tables.pojos.Url> fetchById(Long... values) {
        return fetch(Url.URL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public generated.tables.pojos.Url fetchOneById(Long value) {
        return fetchOne(Url.URL.ID, value);
    }

    /**
     * Fetch records that have <code>full_url IN (values)</code>
     */
    public List<generated.tables.pojos.Url> fetchByFullUrl(String... values) {
        return fetch(Url.URL.FULL_URL, values);
    }

    /**
     * Fetch records that have <code>short_url IN (values)</code>
     */
    public List<generated.tables.pojos.Url> fetchByShortUrl(String... values) {
        return fetch(Url.URL.SHORT_URL, values);
    }

    /**
     * Fetch records that have <code>created_date_time IN (values)</code>
     */
    public List<generated.tables.pojos.Url> fetchByCreatedDateTime(Timestamp... values) {
        return fetch(Url.URL.CREATED_DATE_TIME, values);
    }
}
